public class Main {

    // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è
    interface Car {
        void drive();
    }

    // –ö–ª–∞—Å—Å —Å–µ–¥–∞–Ω–∞
    static class Sedan implements Car {
        @Override
        public void drive() {
            System.out.println("–í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–µ–¥–∞–Ω–æ–º üöò");
        }
    }

    // –ö–ª–∞—Å—Å –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∞
    static class SUV implements Car {
        @Override
        public void drive() {
            System.out.println("–í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–æ–º üöô");
        }
    }

    // –§–∞–±—Ä–∏—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    interface CarFactory {
        Car createCar();
    }

    // –ó–∞–≤–æ–¥ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É —Å–µ–¥–∞–Ω–æ–≤
    static class SedanFactory implements CarFactory {
        @Override
        public Car createCar() {
            return new Sedan();
        }
    }

    // –ó–∞–≤–æ–¥ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–æ–≤
    static class SUVFactory implements CarFactory {
        @Override
        public Car createCar() {
            return new SUV();
        }
    }

    // –ö–ª–∏–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    static class Client {
        private final CarFactory factory;

        public Client(CarFactory factory) {
            this.factory = factory;
        }

        public void orderCar() {
            Car car = factory.createCar();
            car.drive();
        }
    }

    // –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ (—Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞)
    public static void main(String[] args) {
        // –ö–ª–∏–µ–Ω—Ç –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç —Å–µ–¥–∞–Ω
        Client client1 = new Client(new SedanFactory());
        client1.orderCar(); // –í—ã–≤–æ–¥: "–í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–µ–¥–∞–Ω–æ–º üöò"

        // –ö–ª–∏–µ–Ω—Ç –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫
        Client client2 = new Client(new SUVFactory());
        client2.orderCar(); // –í—ã–≤–æ–¥: "–í—ã —É–ø—Ä–∞–≤–ª—è–µ—Ç–µ –≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–æ–º üöô"
    }
}
